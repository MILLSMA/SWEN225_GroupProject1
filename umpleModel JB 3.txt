class Game
{
  Boolean won = false;
0..1 -> 3..6 Player;
public void decideSolution(){

}
public void deal(){

}
public int rollDice(){

}
  public void runGame() {
  }
  public void doTurn(Player p) {
  }
public void makeSuggestion(){

}
public void makeAccusation(){

}
public void doRefutations(){

}
}

class Board
{
  public Position checkValidMove(Player p, String code, int steps){

}
  public void move(Player p, Position old) {
  }
1 <@>- * Cell;
  1 <- 1 Game;
  0..1 -> 3..6 Player;

}

class Cell
{
  Position pos;
  0..1 -> 1 Position;
  * -<@> 1 Room;
  }

class Position
{
  int row;
  int col;
}

class Player
{

  CharacterCard token;
  Cell location;
Boolean isExcluded;

  public Boolean checkHand(Card c) {
  }

  public void displayHand() {
  }

}

class Card
{
  * <- 3..6 Player;
  * <- 0..1 Room;
}

enum CharacterCard { MISS_SCARLETT }
enum WeaponCard { CANDLESTICK }
enum RoomCard { KITCHEN }

class Room
{
  name;
  }

class CardTriplet
{
  CharacterCard character;
  WeaponCard weapon;
  RoomCard room;
  }



namespace -;


class Game
{
  position 21 33 197 197;
  position.association Game__Player 198,122 0,32;
}

class Board
{
  position 260 29 319 95;
  position.association Board__Cell 320,6 0,7;
  position.association Board__Game 0,9 198,5;
  position.association Board__Player 45,78 46,0;
}

class Cell
{
  position 626 29 109 78;
  position.association Cell__Position 110,8 0,11;
  position.association Cell__Room 36,78 51,0;
  }

class Position
{
  position 794 28 109 95;
}

class Player
{
  position 265 157 232 146;
}

class Room
{
  position 609 166 109 78;
}

class Card
{
  position.association Card__Player 79,0 77,146;
    position.association Card__Room 110,11 59,78;
position 272 351 109 61;
}

class Card
{
  position 272 351 109 61;
}

class Card
{
  position 272 351 109 61;
}

class CardTriplet
{
  position 22 289 190 112;
  }

namespace -;//$?[End_of_model]$?