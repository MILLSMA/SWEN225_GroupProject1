class Game
{
  0..1 -> 6 Player;
public void decideSolution(){

}
public void deal(){

}
public int rollDice(){

}
}

class Board
{
  public void findValidMoves(){

}
public void findValidMoves(){

}
1 <@>- * Cell;
  1 -- 1 Game;
  0..1 -> 6 Player;
  
}

class Cell
{
  Position pos;
  0..1 -> 1 Position;
  * -<@> 1..* Room;
  0..1 -> 1 Item;
}

class Position
{
  int row;
  int col;
}

class Player
{
  
  CharacterCard token;
  Cell location;
Boolean isExcluded;
public void makeSuggestion(){

}
public void makeAccusation(){

}
public void doRefutations(){

}
}

class Card
{
  * -- 2..6 Player;
}

enum CharacterCard { MISS_SCARLETT }
enum WeaponCard { CANDLESTICK }
enum RoomCard { KITCHEN }

class Room
{
  name; 
  }

class Item
{
  * -- 1..* Room;
}

class CardTriplet
{
  CharacterCard character;
  WeaponCard weapon;
  RoomCard room;
  * -- * Player;
}

//$?[End_of_model]$?

namespace -;


class Game
{
  position 21 34 177 112;
  position.association Game__Player 126,112 0,32;
}

class Board
{
  position 232 34 223 78;
  position.association Board__Cell 224,8 0,7;
  position.association Board__Game 0,9 185,9;
  position.association Board__Player 45,78 46,0;
}

class Cell
{
  position 504 36 109 78;
  position.association Cell__Position 110,8 0,11;
  position.association Cell__Room 78,95 51,0;
  position.association Cell__Item 110,60 22,0;
}

class Position
{
  position 675 33 109 95;
}

class Player
{
  position 231 157 232 163;
}

class Room
{
  position 494 166 109 78;
}

class Card
{
  position.association Card__Player 110,29 0,74;
  position 43 202 109 61;
}

class Card
{
  position 43 202 109 61;
}

class Card
{
  position 43 202 109 61;
}

class Item
{
  position 667 167 109 61;
  position.association Item__Room 0,7 111,8;
}

class CardTriplet
{
  position 22 326 190 112;
  position.association CardTriplet__Player 153,0 0,129;
}